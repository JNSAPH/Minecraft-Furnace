name: Furnace CLI Release
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Release version/name
        required: true

jobs:
  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: 
        run: bun build . --compile --outfile furnace

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: furnace
          path: furnace

    release:
      permissions:
        contents: write
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Download artifact
          uses: actions/download-artifact

        - name: Package release
          run: |
            tar -czvf furnace.tar.gz furnace
            mv furnace.tar.gz furnace-$INPUT_VERSION.tar.gz

        - name: Create release
          uses: actions/create-release@v2
          with:
            tag_name: ${{ github.ref }}
            release_name: ${{ github.ref }}
            body: |
              Furnace CLI Release
            draft: false
            prerelease: false

        - name: Upload release asset
          uses: actions/upload-release-asset@v1
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./furnace-$INPUT_VERSION.tar.gz
            asset_name: furnace-$INPUT_VERSION.tar.gz
            asset_content_type: application/gzip
