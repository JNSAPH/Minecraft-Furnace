import type { cliOptions } from "@/types/cliOptions";
import { TITLE_TEXT } from "@/consts/consts"

export function generateStartScript(configuration: cliOptions, jarName: string): { script: string, fileName: string } {
    let maxRam = configuration.allocated_ram; // (e.g. 4)
    let autoRestart = configuration.auto_restart; // (e.g. true)
    let os = process.platform; // (e.g. win32 or linux)

    if (os === "linux") {
        return {
            script: linuxScript(jarName, maxRam, autoRestart),
            fileName: "start.sh"
        }
    } else {
        throw new Error("Unsupported OS");
    }
}

function linuxScript(jarName: string, maxRam: string, autoRestart: boolean) {
    let script =
`
#!/bin/bash

# This file has been generated by 
${TITLE_TEXT.split('\n').map(line => `#${line}`).join('\n')}

# Name of your Minecraft server JAR file
server_jar=${jarName}

# Minimum and maximum RAM allocation for the server (adjust as needed)
min_memory="1G"
max_memory="${maxRam}G"

# Additional arguments for the server (optional)
extra_args=""

# Auto-restart in case of server crash (true/false)
auto_restart=${autoRestart}

# Function to start the Minecraft server
start_server() {
    java -Xms$min_memory -Xmx$max_memory -jar $server_jar nogui $extra_args
}

# Check if auto-restart is enabled
if [ "$auto_restart" = true ]; then
    while true; do
        echo "Starting Minecraft server..."
        start_server
        echo "Server has stopped. Restarting in 5 seconds..."
        sleep 5
    done
else
    echo "Starting Minecraft server..."
    start_server
fi
`;
    

    return script;

}